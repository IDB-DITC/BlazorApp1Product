@inject ProductCategoryService service
@page "/cat"

<h3>CategoryList</h3>
<NavLink class="nav-link" href="add">Add</NavLink>
<br />


<Grid Items="data" TItem="ProductCategory">
	<Header>
	<th>ID</th>
	<th>Name</th>
	</Header>
	<Row>
		<!-- by default called context -->
		<td>@context.ProductCategoryID</td>
		<td>@context.Name</td>
		<td>
			@if (context.ImagePath != null)
			{
				<img src="@context.ImagePath" style="width:300px" />
			}

		</td>
	</Row>
	<Footer>
	<td colspan="2">Total record : @data.Count()</td>
	</Footer>
</Grid>

<hr />
@* <table class="table table-responsive table-striped table-hover">
	<thead>
		<tr>
			<th>ID</th>
			<th>Name</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var cat in data)
		{

			<tr>
				<td>@cat.ProductCategoryID</td>
				<td>@cat.Name</td>
				<td>
					<ol>
						@foreach (var product in cat.Products)
						{
							<li>
								<dl>
									<dt>Name</dt>
									<dd>@product.Name</dd>
									<dt>Number</dt>
									<dd>@product.ProductNumber</dd>
									<dt>Color</dt>
									<dd>@product.Color</dd>
								</dl>
							</li>
						}
					</ol>
				</td>
				<td class="btn-group">
					<a class="nav-link btn btn-outline-info" href="/edit/@cat.ProductCategoryID">Edit</a>
					<button class="btn btn-outline-danger" @onclick="()=> DeleteData(cat)">
						Delete
					</button>
				</td>
			</tr>
		}
	</tbody>
</table> *@



@code {

	private List<ProductCategory> data = new List<ProductCategory>();


	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();


		this.data = await this.service.GetProductCategories();



		this.StateHasChanged();
	}


	async Task DeleteData(ProductCategory category)
	{
		await this.service.DeleteProductCategory(category.ProductCategoryID);


		this.StateHasChanged();
	}



}
